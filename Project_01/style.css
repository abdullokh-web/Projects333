/* The provided CSS code is styling a webpage with various effects and animations. Here is a breakdown of what the code is doing: */
@import url('https://fonts.googleapis.com/css2?family=Oswald:wght@500;600;700&display=swap');

/* The `*` selector in CSS targets all elements on the webpage. The properties being set in this rule are: */
* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
    font-family: 'Oswald', sans-serif;
}

/* The CSS code for `body` is styling the webpage's body element with the following properties: */
body {
    display: flex;
    justify-content: center;
    align-items: center;
    min-height: 100vh;
    background: #3d3d3d;
    transform-origin: bottom;
    overflow: hidden;
}

/* The `.container` CSS rule is styling a container element on the webpage with the following properties: */
.container {
    position: absolute;
    display: flex;
    transform-style: preserve-3d;
    transform: rotateY(30deg) rotateX(10deg);
    gap: 10px;
}

/* The `.text` CSS rule is styling a text element on the webpage with the following properties: */
.text {
    position: relative;
    width: 100px;
    height: 100px;
    transform-style: preserve-3d;
    transition: 2.5s ease-in-out;
    transition-delay: calc(0.25s * var(--j));
}

/* The CSS rule `.container.newYear .text` is targeting the text elements with the class `text` that are inside a container with the class `container` and an additional class `newYear`. */
.container.newYear .text {
    transform: rotateX(calc(-360deg * 1));
}

/* This CSS rule is targeting the last child element with the class `text` that is inside a container with the classes `container` and `newYear`. It is setting a transformation on this specific element to rotate it along the X-axis by an angle calculated as 630 degrees multiplied by 1. This transformation will affect the visual appearance of the targeted element by rotating it in a specific manner. */
.container.newYear .text:last-child {
    transform: rotateX(calc(630deg * 1));
}

/* The `.text span` CSS rule is styling a specific element within the webpage. Here is a breakdown of what each property is doing: */
.text span {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
    color: #fff;
    font-size: 4em;
    cursor: default;
    background: linear-gradient(#434343, #535353);
    transform-style: preserve-3d;
    transform: rotateX(calc(90deg * var(--i))) translateZ(50px);
}

/* The `.text::before` CSS rule is styling a pseudo-element that is inserted before the content of elements with the class `text`. Here is a breakdown of what each property is doing: */
.text::before {
    content: '';
    position: absolute;
    width: 100%;
    height: 100%;
    background: #373737;
    transform-origin: left;
    transform: rotateY(90deg) translateX(-50px);
}

/* The CSS rule `.text:last-child span` is targeting the last child element with the class `text` that is inside a container. It is setting the background of this specific element to a linear gradient that transitions from `#29c040` to `#32ed4e`, and it is also setting the text color to `#fff`. This rule is styling the visual appearance of the last child element with the class `text` by applying these background and text color properties to it. */
.text:last-child span {
    background: linear-gradient(#29c040, #32ed4e);
    color: #fff;
}

/* This CSS rule is targeting the pseudo-element `::before` that is inserted before the content of the last child element with the class `text`. It is setting the background color of this pseudo-element to `#11a728`. This rule is styling the visual appearance of the pseudo-element by applying the specified background color to it. */
.text:last-child::before {
    background: #11a728;
}

/* The CSS code for `h2` is styling the `<h2>` elements on the webpage with the following properties: */
h2 {
    position: absolute;
    bottom: 50px;
    color: #252525;
    font-size: 2em;
    transition: 0.5s;
    cursor: pointer;
}

h2.active {
    color: #fff;
    text-shadow: 0 0 20px #fff,
        0 0 50px #fff;
}

h2:after {
    content: ' 2025';
    transition: 0.5s;
}

h2.active:after {
    content: ' 2026';
    color: #32ed4e;
    text-shadow: 0 0 20px #32ed4e,
        0 0 50px #32ed4e;
}

/* Glowing Circles */
.glowing {
    position: relative;
    min-width: 750px;
    height: 750px;
    animation: colorChange 5s linear infinite;
    transform-origin: right;
    margin: -150px;
    pointer-events: none;
}

.glowing:nth-child(even) {
    transform-origin: left;
}

@keyframes colorChange {
    0% {
        filter: hue-rotate(0deg);
        transform: rotate(0deg);
    }

    100% {
        filter: hue-rotate(360deg);
        transform: rotate(360deg);
    }
}

.glowing span {
    position: absolute;
    top: calc(80px * var(--i));
    left: calc(80px * var(--i));
    bottom: calc(80px * var(--i));
    right: calc(80px * var(--i));
    border-radius: 50%;
    box-sizing: border-box;
}

.glowing span:before {
    content: '';
    position: absolute;
    top: 50%;
    left: -8px;
    width: 15px;
    height: 15px;
    background: #f00;
    border-radius: 50%;
}

.glowing span:nth-child(3n + 1) {
    animation: animate 10s alternate infinite;
}

.glowing span:nth-child(3n + 2) {
    animation: animate-reverse 3s alternate infinite;
}

.glowing span:nth-child(3n + 3) {
    animation: animate 8s alternate infinite;
}

.glowing span:nth-child(3n + 1):before {
    background: rgba(134, 255, 0, 1);
    box-shadow: 0 0 20px rgba(134, 255, 0, 1),
        0 0 40px rgba(134, 255, 0, 1),
        0 0 60px rgba(134, 255, 0, 1),
        0 0 80px rgba(134, 255, 0, 1),
        0 0 0 4px rgba(134, 255, 0, .1);
}

.glowing span:nth-child(3n + 2):before {
    background: rgba(255, 214, 0, 1);
    box-shadow: 0 0 20px rgba(255, 214, 0, 1),
        0 0 40px rgba(255, 214, 0, 1),
        0 0 60px rgba(255, 214, 0, 1),
        0 0 80px rgba(255, 214, 0, 1),
        0 0 0 8px rgba(255, 214, 0, .1);
}

.glowing span:nth-child(3n + 3):before {
    background: rgba(0, 226, 255, 1);
    box-shadow: 0 0 20px rgba(0, 226, 255, 1),
        0 0 40px rgba(0, 226, 255, 1),
        0 0 60px rgba(0, 226, 255, 1),
        0 0 80px rgba(0, 226, 255, 1),
        0 0 0 4px rgba(0, 226, 255, .1);
}

@keyframes animate {
    0% {
        transform: rotate(0deg);
    }

    100% {
        transform: rotate(360deg);
    }
}

@keyframes animate-reverse {
    0% {
        transform: rotate(360deg);
    }

    100% {
        transform: rotate(0deg);
    }
}